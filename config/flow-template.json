{
  "name": "${FLOW_NAME}",
  "description": "${FLOW_DESCRIPTION}",
  "executionRoleArn": "arn:aws:iam::${AWS_ACCOUNT_ID}:role/${EXECUTION_ROLE_NAME}",
  "definition": {
    "nodes": [
      {
        "name": "InputNode",
        "type": "Input",
        "configuration": {
          "input": {}
        },
        "outputs": [
          {
            "name": "document",
            "type": "String"
          }
        ]
      },
      {
        "name": "LogAnalyzer",
        "type": "Prompt",
        "configuration": {
          "prompt": {
            "sourceConfiguration": {
              "inline": {
                "templateType": "TEXT",
                "templateConfiguration": {
                  "text": {
                    "text": "以下のテストログを分析し、エラーと警告を抽出してください。\n\nログ内容:\n{{log_content}}\n\n以下の形式でJSON形式で出力してください:\n{\n  \"errors\": [\n    {\n      \"type\": \"エラータイプ\",\n      \"message\": \"エラーメッセージ\",\n      \"line\": \"該当行\",\n      \"severity\": \"Critical|High|Medium|Low\"\n    }\n  ],\n  \"warnings\": [\n    {\n      \"type\": \"警告タイプ\",\n      \"message\": \"警告メッセージ\",\n      \"line\": \"該当行\"\n    }\n  ],\n  \"summary\": {\n    \"total_errors\": 数値,\n    \"total_warnings\": 数値,\n    \"critical_issues\": 数値,\n    \"failed_tests\": [\"テスト名のリスト\"]\n  },\n  \"key_issues\": \"最も重要な問題の要約（200文字以内）\"\n}",
                    "inputVariables": [
                      {"name": "log_content"}
                    ]
                  }
                },
                "modelId": "${BEDROCK_MODEL_ID}",
                "inferenceConfiguration": {
                  "text": {
                    "maxTokens": ${MAX_TOKENS_ANALYZER},
                    "temperature": ${TEMPERATURE},
                    "topP": ${TOP_P}
                  }
                }
              }
            }
          }
        },
        "inputs": [
          {
            "expression": "$.data",
            "name": "log_content",
            "type": "String"
          }
        ],
        "outputs": [
          {
            "name": "modelCompletion",
            "type": "String"
          }
        ]
      },
      {
        "name": "SeverityClassifier",
        "type": "Condition",
        "configuration": {
          "condition": {
            "conditions": [
              {
                "name": "Critical",
                "expression": "$.data.contains('FATAL') || $.data.contains('Critical')"
              },
              {
                "name": "High",
                "expression": "$.data.contains('ERROR') || $.data.contains('Exception')"
              },
              {
                "name": "Medium",
                "expression": "$.data.contains('WARN') || $.data.contains('Timeout')"
              },
              {
                "name": "Low",
                "expression": "true"
              }
            ]
          }
        },
        "inputs": [
          {
            "expression": "$.data",
            "name": "data",
            "type": "String"
          }
        ],
        "outputs": [
          {
            "name": "conditionName",
            "type": "String"
          }
        ]
      },
      {
        "name": "ErrorExtractor",
        "type": "Prompt",
        "configuration": {
          "prompt": {
            "sourceConfiguration": {
              "inline": {
                "templateType": "TEXT",
                "templateConfiguration": {
                  "text": {
                    "text": "以下の分析結果から、最も重要なエラーメッセージとスタックトレースを抽出してください。\n\n分析結果:\n{{analysis_result}}\n\n以下の条件で抽出してください:\n1. FATALやERRORレベルのメッセージを優先\n2. スタックトレースは最初の10行まで\n3. 重複するエラーは除外\n4. テスト失敗の直接的な原因となるエラーを重視\n\n出力形式:\n```\n【重要なエラー1】\nエラータイプ: \nメッセージ: \nスタックトレース: \n\n【重要なエラー2】\n...\n```",
                    "inputVariables": [
                      {"name": "analysis_result"}
                    ]
                  }
                },
                "modelId": "${BEDROCK_MODEL_ID}",
                "inferenceConfiguration": {
                  "text": {
                    "maxTokens": ${MAX_TOKENS_EXTRACTOR},
                    "temperature": ${TEMPERATURE},
                    "topP": ${TOP_P}
                  }
                }
              }
            }
          }
        },
        "inputs": [
          {
            "expression": "$.data",
            "name": "analysis_result",
            "type": "String"
          }
        ],
        "outputs": [
          {
            "name": "modelCompletion",
            "type": "String"
          }
        ]
      },
      {
        "name": "KnowledgeBaseSearch",
        "type": "KnowledgeBase",
        "configuration": {
          "knowledgeBase": {
            "knowledgeBaseId": "${KNOWLEDGE_BASE_ID}",
            "modelId": "${BEDROCK_MODEL_ID}"
          }
        },
        "inputs": [
          {
            "expression": "$.data",
            "name": "retrievalQuery",
            "type": "String"
          }
        ],
        "outputs": [
          {
            "name": "outputText",
            "type": "String"
          }
        ]
      },
      {
        "name": "ReportGenerator",
        "type": "Prompt",
        "configuration": {
          "prompt": {
            "sourceConfiguration": {
              "inline": {
                "templateType": "TEXT",
                "templateConfiguration": {
                  "text": {
                    "text": "以下の情報を統合して、テスト実行結果の包括的なサマリーレポートをMarkdown形式で生成してください。\n\n## 入力データ\n- **ログ分析結果**: {{analysis_result}}\n- **重要度レベル**: {{severity_level}}\n- **抽出されたエラー**: {{extracted_errors}}\n- **根本原因分析**: {{root_cause_analysis}}\n\n## 出力形式\n以下のMarkdown形式で統一されたレポートを生成してください:\n\n# 🔍 テスト実行サマリーレポート\n\n**生成日時**: [現在時刻]\n**重要度**: {{severity_level}}\n\n## 📊 実行概要\n\n| 項目 | 値 |\n|------|----|\n| 総エラー数 | [分析結果から抽出] |\n| 総警告数 | [分析結果から抽出] |\n| 失敗テスト数 | [分析結果から抽出] |\n| 重要度 | {{severity_level}} |\n\n## 🚨 重要な問題\n\n{{extracted_errors}}\n\n## 🔍 根本原因分析\n\n{{root_cause_analysis}}\n\n## 📈 影響度評価\n\n- **システム影響**: [Critical/High/Medium/Low]\n- **ユーザー影響**: [分析結果に基づく評価]\n- **ビジネス影響**: [推定される影響]\n\n## 💡 推奨アクション\n\n### 🔥 緊急対応（24時間以内）\n- [最優先で対応すべき項目]\n\n### ⚡ 短期対応（1週間以内）\n- [短期で対応すべき項目]\n\n### 🔧 中長期対応（1ヶ月以内）\n- [継続的改善項目]\n\n## 📋 次回テスト時の注意点\n\n- [予防策や監視ポイント]\n\n---\n*このレポートはAmazon Bedrock Flowsによって自動生成されました*",
                    "inputVariables": [
                      {"name": "analysis_result"},
                      {"name": "severity_level"},
                      {"name": "extracted_errors"},
                      {"name": "root_cause_analysis"}
                    ]
                  }
                },
                "modelId": "${BEDROCK_MODEL_ID}",
                "inferenceConfiguration": {
                  "text": {
                    "maxTokens": ${MAX_TOKENS_REPORT},
                    "temperature": ${TEMPERATURE},
                    "topP": ${TOP_P}
                  }
                }
              }
            }
          }
        },
        "inputs": [
          {
            "expression": "$.data.analysis",
            "name": "analysis_result",
            "type": "String"
          },
          {
            "expression": "$.data.severity",
            "name": "severity_level",
            "type": "String"
          },
          {
            "expression": "$.data.errors",
            "name": "extracted_errors",
            "type": "String"
          },
          {
            "expression": "$.data.rootcause",
            "name": "root_cause_analysis",
            "type": "String"
          }
        ],
        "outputs": [
          {
            "name": "modelCompletion",
            "type": "String"
          }
        ]
      },
      {
        "name": "OutputNode",
        "type": "Output",
        "configuration": {
          "output": {}
        },
        "inputs": [
          {
            "expression": "$.data",
            "name": "document",
            "type": "String"
          }
        ]
      }
    ],
    "connections": [
      {
        "name": "InputToAnalyzer",
        "type": "Data",
        "source": "InputNode",
        "target": "LogAnalyzer",
        "configuration": {
          "data": {
            "sourceOutput": "document",
            "targetInput": "log_content"
          }
        }
      },
      {
        "name": "AnalyzerToClassifier",
        "type": "Data",
        "source": "LogAnalyzer",
        "target": "SeverityClassifier",
        "configuration": {
          "data": {
            "sourceOutput": "modelCompletion",
            "targetInput": "data"
          }
        }
      },
      {
        "name": "AnalyzerToExtractor",
        "type": "Data",
        "source": "LogAnalyzer",
        "target": "ErrorExtractor",
        "configuration": {
          "data": {
            "sourceOutput": "modelCompletion",
            "targetInput": "analysis_result"
          }
        }
      },
      {
        "name": "ExtractorToKnowledgeBase",
        "type": "Data",
        "source": "ErrorExtractor",
        "target": "KnowledgeBaseSearch",
        "configuration": {
          "data": {
            "sourceOutput": "modelCompletion",
            "targetInput": "retrievalQuery"
          }
        }
      },
      {
        "name": "AllToReportGenerator",
        "type": "Data",
        "source": "KnowledgeBaseSearch",
        "target": "ReportGenerator",
        "configuration": {
          "data": {
            "sourceOutput": "outputText",
            "targetInput": "root_cause_analysis"
          }
        }
      },
      {
        "name": "ReportToOutput",
        "type": "Data",
        "source": "ReportGenerator",
        "target": "OutputNode",
        "configuration": {
          "data": {
            "sourceOutput": "modelCompletion",
            "targetInput": "document"
          }
        }
      }
    ]
  }
}